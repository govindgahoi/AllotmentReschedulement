//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Allotment.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.upswp_niveshmitraservicesSoap")]
    public interface upswp_niveshmitraservicesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WGetBasicDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WGetBasicDetails(string ControlID, string UnitID, string ServiceID, string ProcessIndustryID, string passsalt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WGetBasicDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WGetBasicDetailsAsync(string ControlID, string UnitID, string ServiceID, string ProcessIndustryID, string passsalt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WReturn_CUSID_STATUS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WReturn_CUSID_STATUS(
                    string ControlID, 
                    string UnitID, 
                    string ServiceID, 
                    string ProcessIndustryID, 
                    string ApplicationID, 
                    string Status_Code, 
                    string Remarks, 
                    string Pendancy_level, 
                    string Fee_Amount, 
                    string Fee_Status, 
                    string Transaction_ID, 
                    string Transaction_Date, 
                    string Transaction_Date_Time, 
                    string NOC_Certificate_Number, 
                    string NOC_URL, 
                    string ISNOC_URL_ActiveYesNO, 
                    string passsalt, 
                    string Request_ID, 
                    string Objection_Rejection_Code, 
                    string Is_Certificate_Valid_Life_Time, 
                    string Certificate_EXP_Date_DDMMYYYY, 
                    string D1, 
                    string D2, 
                    string D3, 
                    string D4, 
                    string D5, 
                    string D6, 
                    string D7);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WReturn_CUSID_STATUS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WReturn_CUSID_STATUSAsync(
                    string ControlID, 
                    string UnitID, 
                    string ServiceID, 
                    string ProcessIndustryID, 
                    string ApplicationID, 
                    string Status_Code, 
                    string Remarks, 
                    string Pendancy_level, 
                    string Fee_Amount, 
                    string Fee_Status, 
                    string Transaction_ID, 
                    string Transaction_Date, 
                    string Transaction_Date_Time, 
                    string NOC_Certificate_Number, 
                    string NOC_URL, 
                    string ISNOC_URL_ActiveYesNO, 
                    string passsalt, 
                    string Request_ID, 
                    string Objection_Rejection_Code, 
                    string Is_Certificate_Valid_Life_Time, 
                    string Certificate_EXP_Date_DDMMYYYY, 
                    string D1, 
                    string D2, 
                    string D3, 
                    string D4, 
                    string D5, 
                    string D6, 
                    string D7);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WReturn_CUSID_PrintApplicationURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WReturn_CUSID_PrintApplicationURL(string ControlID, string UnitID, string ServiceID, string PrintApplicationURL, string passsalt, string Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WReturn_CUSID_PrintApplicationURL", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WReturn_CUSID_PrintApplicationURLAsync(string ControlID, string UnitID, string ServiceID, string PrintApplicationURL, string passsalt, string Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WReturn_CUSID_ISLandPurchased", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WReturn_CUSID_ISLandPurchased(string ControlID, string UnitID, string ServiceID, string ISLandPurchasedYesNO, string passsalt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WReturn_CUSID_ISLandPurchased", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WReturn_CUSID_ISLandPurchasedAsync(string ControlID, string UnitID, string ServiceID, string ISLandPurchasedYesNO, string passsalt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WReturn_CUSID_Entrepreneur_NOC_IN_BINARYFORMAT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WReturn_CUSID_Entrepreneur_NOC_IN_BINARYFORMAT(string strControlID, string strUnitID, string strServiceID, string ProcessIndustryID, string NOC_Certificate_Number, string base64, string MimeType, string passsalt, string Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WReturn_CUSID_Entrepreneur_NOC_IN_BINARYFORMAT", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WReturn_CUSID_Entrepreneur_NOC_IN_BINARYFORMATAsync(string strControlID, string strUnitID, string strServiceID, string ProcessIndustryID, string NOC_Certificate_Number, string base64, string MimeType, string passsalt, string Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WGetUBPaymentDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WGetUBPaymentDetails(string ControlID, string UnitID, string ServiceID, string passsalt, string Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WGetUBPaymentDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WGetUBPaymentDetailsAsync(string ControlID, string UnitID, string ServiceID, string passsalt, string Request_ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface upswp_niveshmitraservicesSoapChannel : Allotment.ServiceReference1.upswp_niveshmitraservicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class upswp_niveshmitraservicesSoapClient : System.ServiceModel.ClientBase<Allotment.ServiceReference1.upswp_niveshmitraservicesSoap>, Allotment.ServiceReference1.upswp_niveshmitraservicesSoap {
        
        public upswp_niveshmitraservicesSoapClient() {
        }
        
        public upswp_niveshmitraservicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public upswp_niveshmitraservicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public upswp_niveshmitraservicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public upswp_niveshmitraservicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet WGetBasicDetails(string ControlID, string UnitID, string ServiceID, string ProcessIndustryID, string passsalt) {
            return base.Channel.WGetBasicDetails(ControlID, UnitID, ServiceID, ProcessIndustryID, passsalt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WGetBasicDetailsAsync(string ControlID, string UnitID, string ServiceID, string ProcessIndustryID, string passsalt) {
            return base.Channel.WGetBasicDetailsAsync(ControlID, UnitID, ServiceID, ProcessIndustryID, passsalt);
        }
        
        public string WReturn_CUSID_STATUS(
                    string ControlID, 
                    string UnitID, 
                    string ServiceID, 
                    string ProcessIndustryID, 
                    string ApplicationID, 
                    string Status_Code, 
                    string Remarks, 
                    string Pendancy_level, 
                    string Fee_Amount, 
                    string Fee_Status, 
                    string Transaction_ID, 
                    string Transaction_Date, 
                    string Transaction_Date_Time, 
                    string NOC_Certificate_Number, 
                    string NOC_URL, 
                    string ISNOC_URL_ActiveYesNO, 
                    string passsalt, 
                    string Request_ID, 
                    string Objection_Rejection_Code, 
                    string Is_Certificate_Valid_Life_Time, 
                    string Certificate_EXP_Date_DDMMYYYY, 
                    string D1, 
                    string D2, 
                    string D3, 
                    string D4, 
                    string D5, 
                    string D6, 
                    string D7) {
            return base.Channel.WReturn_CUSID_STATUS(ControlID, UnitID, ServiceID, ProcessIndustryID, ApplicationID, Status_Code, Remarks, Pendancy_level, Fee_Amount, Fee_Status, Transaction_ID, Transaction_Date, Transaction_Date_Time, NOC_Certificate_Number, NOC_URL, ISNOC_URL_ActiveYesNO, passsalt, Request_ID, Objection_Rejection_Code, Is_Certificate_Valid_Life_Time, Certificate_EXP_Date_DDMMYYYY, D1, D2, D3, D4, D5, D6, D7);
        }
        
        public System.Threading.Tasks.Task<string> WReturn_CUSID_STATUSAsync(
                    string ControlID, 
                    string UnitID, 
                    string ServiceID, 
                    string ProcessIndustryID, 
                    string ApplicationID, 
                    string Status_Code, 
                    string Remarks, 
                    string Pendancy_level, 
                    string Fee_Amount, 
                    string Fee_Status, 
                    string Transaction_ID, 
                    string Transaction_Date, 
                    string Transaction_Date_Time, 
                    string NOC_Certificate_Number, 
                    string NOC_URL, 
                    string ISNOC_URL_ActiveYesNO, 
                    string passsalt, 
                    string Request_ID, 
                    string Objection_Rejection_Code, 
                    string Is_Certificate_Valid_Life_Time, 
                    string Certificate_EXP_Date_DDMMYYYY, 
                    string D1, 
                    string D2, 
                    string D3, 
                    string D4, 
                    string D5, 
                    string D6, 
                    string D7) {
            return base.Channel.WReturn_CUSID_STATUSAsync(ControlID, UnitID, ServiceID, ProcessIndustryID, ApplicationID, Status_Code, Remarks, Pendancy_level, Fee_Amount, Fee_Status, Transaction_ID, Transaction_Date, Transaction_Date_Time, NOC_Certificate_Number, NOC_URL, ISNOC_URL_ActiveYesNO, passsalt, Request_ID, Objection_Rejection_Code, Is_Certificate_Valid_Life_Time, Certificate_EXP_Date_DDMMYYYY, D1, D2, D3, D4, D5, D6, D7);
        }
        
        public string WReturn_CUSID_PrintApplicationURL(string ControlID, string UnitID, string ServiceID, string PrintApplicationURL, string passsalt, string Request_ID) {
            return base.Channel.WReturn_CUSID_PrintApplicationURL(ControlID, UnitID, ServiceID, PrintApplicationURL, passsalt, Request_ID);
        }
        
        public System.Threading.Tasks.Task<string> WReturn_CUSID_PrintApplicationURLAsync(string ControlID, string UnitID, string ServiceID, string PrintApplicationURL, string passsalt, string Request_ID) {
            return base.Channel.WReturn_CUSID_PrintApplicationURLAsync(ControlID, UnitID, ServiceID, PrintApplicationURL, passsalt, Request_ID);
        }
        
        public string WReturn_CUSID_ISLandPurchased(string ControlID, string UnitID, string ServiceID, string ISLandPurchasedYesNO, string passsalt) {
            return base.Channel.WReturn_CUSID_ISLandPurchased(ControlID, UnitID, ServiceID, ISLandPurchasedYesNO, passsalt);
        }
        
        public System.Threading.Tasks.Task<string> WReturn_CUSID_ISLandPurchasedAsync(string ControlID, string UnitID, string ServiceID, string ISLandPurchasedYesNO, string passsalt) {
            return base.Channel.WReturn_CUSID_ISLandPurchasedAsync(ControlID, UnitID, ServiceID, ISLandPurchasedYesNO, passsalt);
        }
        
        public string WReturn_CUSID_Entrepreneur_NOC_IN_BINARYFORMAT(string strControlID, string strUnitID, string strServiceID, string ProcessIndustryID, string NOC_Certificate_Number, string base64, string MimeType, string passsalt, string Request_ID) {
            return base.Channel.WReturn_CUSID_Entrepreneur_NOC_IN_BINARYFORMAT(strControlID, strUnitID, strServiceID, ProcessIndustryID, NOC_Certificate_Number, base64, MimeType, passsalt, Request_ID);
        }
        
        public System.Threading.Tasks.Task<string> WReturn_CUSID_Entrepreneur_NOC_IN_BINARYFORMATAsync(string strControlID, string strUnitID, string strServiceID, string ProcessIndustryID, string NOC_Certificate_Number, string base64, string MimeType, string passsalt, string Request_ID) {
            return base.Channel.WReturn_CUSID_Entrepreneur_NOC_IN_BINARYFORMATAsync(strControlID, strUnitID, strServiceID, ProcessIndustryID, NOC_Certificate_Number, base64, MimeType, passsalt, Request_ID);
        }
        
        public System.Data.DataSet WGetUBPaymentDetails(string ControlID, string UnitID, string ServiceID, string passsalt, string Request_ID) {
            return base.Channel.WGetUBPaymentDetails(ControlID, UnitID, ServiceID, passsalt, Request_ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WGetUBPaymentDetailsAsync(string ControlID, string UnitID, string ServiceID, string passsalt, string Request_ID) {
            return base.Channel.WGetUBPaymentDetailsAsync(ControlID, UnitID, ServiceID, passsalt, Request_ID);
        }
    }
}
